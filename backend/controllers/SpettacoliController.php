<?php/** * Controller per la gestione degli spettacoli teatrali della compagnia. *  * Questa sezione Ã¨ utile per gestire le prenotazioni con piantina degli  * spettacoli. *  * @author Mattia Leonardo Angelillo * @date 2024-09-14 */namespace backend\controllers;use Yii;use yii\filters\VerbFilter;use yii\filters\AccessControl;use yii\web\Controller;use yii\web\UploadedFile;use yii\web\NotFoundHttpException;use backend\models\Spettacoli;use backend\models\SpettacoliSearch;use backend\models\IltTeatroPiantina;use backend\components\sistema_prenotazione_biglietti\Postazioni;use backend\models\SpettacoloPrenotazione;/** * Site controller */class SpettacoliController extends Controller{    /**     * {@inheritdoc}     */    public function behaviors()    {        return [            'access' => [                'class' => AccessControl::className(),                'rules' => [                    [                        'actions' => ['login', 'error','login-by-app', 'reset-password', 'nuova-password'],                        'allow' => true,                    ],                    [                        'actions' => ['logout', 'index'],                        'allow' => true,                        'roles' => ['@'],                    ],                    [                        'actions' => [],//All page                        'allow' => true,                        'roles' => ['Super User', 'spettacoli'],                    ],                ],            ],            'verbs' => [                'class' => VerbFilter::className(),                'actions' => [                    'logout' => ['post'],                ],            ],        ];    }        /**     * {@inheritdoc}     */    public function actions()    {        return [            'error' => [                'class' => 'yii\web\ErrorAction',            ],        ];    }    /**     * Displays homepage.     *     * @return string     */    public function actionIndex()    {        $searchModel = new SpettacoliSearch();        $dataProvider = $searchModel->search($this->request->queryParams);                return $this->render("index", [            'searchModel'  => $searchModel,            'dataProvider' => $dataProvider,        ]);    }        /**     * Permette l'inserimento di un nuovo spettacolo     *      * @return mixed     */    public function actionCreate(){        $model = new Spettacoli();        $piantine = IltTeatroPiantina::find()->all();                if(Yii::$app->request->isPost){                        if($model->load(Yii::$app->request->post())){                $piantina                   = \backend\models\IltTeatroPiantina::findOne($model->piantina);                $model->piantina            = $piantina->piantina;                $model->backgroundPiantina  = $piantina->background;                $model->backgroundPosition  = $piantina->position;                                $banner = UploadedFile::getInstance($model, 'banner');                if($banner <> ""){                    $filename = md5($banner->baseName).md5(date('YmdHmi')). '.' . $banner->extension;                                        //$banner->saveAs("iloveteatro/pdf_uploads/".$filename);                    $model->banner = Yii::$app->params['site_protocol'].Yii::$app->params['backendWeb']                                            .DIRECTORY_SEPARATOR.Yii::$app->params['crm_upload_path']. $filename;                    $banner->saveAs(Yii::$app->params['crm_upload_path'].$filename);                }                                $locandina = UploadedFile::getInstance($model, 'locandina');                                if($locandina <> ""){                    $filename = md5($banner->baseName).md5(date('YmdHmi')). '.' . $banner->extension;                    $model->locandina = Yii::$app->params['site_protocol'].Yii::$app->params['backendWeb']                                            .Yii::$app->params['crm_upload_path']. $filename;                    $locandina->saveAs(Yii::$app->params['crm_upload_path'].$filename);                }                                if($model->save()){                    return $this->redirect(['view-show', 'id' => $model->id]);                }            }        }                return $this->render('create', [            'model'     => $model,            'piantine'  => $piantine,        ]);    }        /**     *      * @param type $id     * @return typeVisualizza i dettagli dello spettacolo e ne consente      * la modifica     *      * @param $id ID dello spettacolo     */    public function actionViewShow($id){        $model = $this->findModelSpettacolo($id);        $oldLocandina = $model->locandina;        $oldBanner = $model->banner;        if(Yii::$app->request->isPost){            if($model->load(Yii::$app->request->post())){                $model->banner = $oldBanner;                $model->locandina = $oldLocandina;                $banner = UploadedFile::getInstance($model, 'banner');                if($banner <> ""){                    $filename = md5($banner->baseName).md5(date('YmdHmi')). '.' . $banner->extension;                    //$banner->saveAs("iloveteatro/pdf_uploads/".$filename);                    $model->banner = Yii::$app->params['site_protocol'].Yii::$app->params['backendWeb']                                            .DIRECTORY_SEPARATOR.Yii::$app->params['crm_upload_path']. $filename;                    $banner->saveAs(Yii::$app->params['crm_upload_path'].$filename);                }else{                }                                $locandina = UploadedFile::getInstance($model, 'locandina');                if($locandina <> ""){                    $filename = md5($locandina->baseName).md5(date('YmdHmi')). '.' . $locandina->extension;                    $model->locandina = Yii::$app->params['site_protocol'].Yii::$app->params['backendWeb']                                            .Yii::$app->params['crm_upload_path']. $filename;                    $locandina->saveAs(Yii::$app->params['crm_upload_path'].$filename);                }                if($model->save()){                    return $this->redirect(['view-show', 'id' => $id]);                }            }        }        return $this->render('show', [            'model' => $model,        ]);    }        /**     * Cancella uno spettacolo     *      * @param int $id ID dello spettacolo da eliminare     * @return type     */    public function actionDelete($id){        $model = $this->findModelSpettacolo($id);                //Cancello le immagini dal server        $img = substr($model->banner, strpos($model->banner, Yii::$app->params['crm_upload_path']));        if(file_exists($img)){            unlink(substr($model->banner, strpos($model->banner, Yii::$app->params['crm_upload_path'])));        }        $img = substr($model->locandina, strpos($model->locandina, Yii::$app->params['crm_upload_path']));        if(file_exists($img)){            unlink($img);        }        //Cancello lo spettacolo        $model->delete();                Yii::$app->session->setFlash('success', Yii::t('app', 'Spettacolo rimosso con successo dalla programmazione'));        return $this->redirect(['/spettacoli/index']);            }        /**     * Effettua una nuova prenotazione per lo spettacolo     *      * @param type $spettacolo_id     */    public function actionPrenotazioneTicket($spettacolo_id){        $model = $this->findModelSpettacolo($spettacolo_id);        $postazioni = new Postazioni(json_decode($model->piantina));                if(Yii::$app->request->isPost){            $dati         = Yii::$app->request->post("dati");            $prenotazione = Yii::$app->request->post("prenotazione");                        $prenotazione_esistente = SpettacoloPrenotazione::find()->where(['email' => $dati['email'], 'spettacolo' => $spettacolo_id])->one();                        $res_prenotazioni = $postazioni->prenotazione(                $prenotazione,                !is_null($prenotazione_esistente)?json_decode($prenotazione_esistente->prenotazione, true):null,                Yii::$app->request->post('tipo-prenotazione')??SpettacoloPrenotazione::NON_PAGATO            );                        //Salvo i dati della prenotazione            $model->piantina = $res_prenotazioni['piantina'];            $model->save();                        if(!is_null($prenotazione_esistente)){                $prenotazione_esistente->prenotazione = $res_prenotazioni['prenotazione_posti_utente'];                $prenotazione_esistente->save();            }else{//creo una nuova prenotazione                $nuova_prenotazione_obj = new SpettacoloPrenotazione();                $nuova_prenotazione_obj->nome       = $dati['nome'];                $nuova_prenotazione_obj->cognome    = $dati['cognome'];                $nuova_prenotazione_obj->email      = $dati['email'];                $nuova_prenotazione_obj->cellulare  = $dati['cellulare'];                $nuova_prenotazione_obj->spettacolo = $spettacolo_id;                $nuova_prenotazione_obj->pagato     = SpettacoloPrenotazione::NON_PAGATO;                $nuova_prenotazione_obj->prenotazione = $res_prenotazioni['prenotazione_posti_utente'];                $nuova_prenotazione_obj->save();               }                        //Fine salvataggio dei dati            Yii::$app->session->setFlash('success', Yii::t('app', 'Prenotazione salvata con successo'));            return $this->redirect(['prenotazione-ticket', 'spettacolo_id' => $spettacolo_id]);        }                return $this->render('nuova-prenotazione', [            'model'         => $model,            'postazioni'    => $postazioni,        ]);    }        /**     * Gestione di tutte le prenotazioni     * per un dato spettacolo     *      * @param int $spettacolo_id     * @param string $search     * @return mixed     */    public function actionPrenotazioni($spettacolo_id, $search = ""){        $prenotazioni = SpettacoloPrenotazione::find()                            ->where(['spettacolo' => $spettacolo_id])                            ->orderBy(['cognome' => SORT_ASC, 'nome' => SORT_ASC, 'data_registrazione' => SORT_ASC])                            ->groupBy(['email'])                            ->all();        $spettacolo = Spettacoli::findOne($spettacolo_id);                //Conto il numero totale di posti prenotati        $totali         = SpettacoloPrenotazione::totali($prenotazioni, $spettacolo->piantina);        $nOfSeatState   = $totali['nOfSeatState'];        //------------------------------------------------------------                if(Yii::$app->request->isPost){            $search = Yii::$app->request->post("cerca");            if($search <> ""){                $prenotazioni = SpettacoloPrenotazione::find()                                ->where(['like', 'nome', "%".$search."%", false])                                ->orWhere(['like', 'cognome', "%".$search."%", false])                                ->orWhere(['like', 'email', "%".$search."%", false])                                ->groupBy(['email'])                                ->andWhere(['spettacolo' => $spettacolo_id])                                ->all();                                return $this->render('prenotazioni', [                    'prenotazioni'  => $prenotazioni,                    'spettacolo'    => $spettacolo,                    'search'        => $search,                    'spettacolo_id' => $spettacolo_id,                                                    'nOfSeatBooked' => SpettacoloPrenotazione::totali($prenotazioni, $spettacolo->piantina)['nOfSeatBooked'],                    'nOfSeatState'  => SpettacoloPrenotazione::totali($prenotazioni, $spettacolo->piantina)['nOfSeatState'],                ]);            }        }                return $this->render('prenotazioni', [            'prenotazioni'  => $prenotazioni,            'spettacolo'    => $spettacolo,            'search'        => $search,            'spettacolo_id' => $spettacolo_id,                        //Totale dei posti occupati            'nOfSeatBooked' => SpettacoloPrenotazione::totali($prenotazioni, $spettacolo->piantina)['nOfSeatBooked'],            //Informazioni sui posti:            //- Pagati            //- Da pagare            //- Posti riservati per la stampa            //- Totali            'nOfSeatState'  => SpettacoloPrenotazione::totali($prenotazioni, $spettacolo->piantina)['nOfSeatState'],        ]);    }        /**     * Finds the Media model based on its primary key value.     * If the model is not found, a 404 HTTP exception will be thrown.     * @param int $id ID     * @return Media the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findModelSpettacolo($id)    {        if (($model = Spettacoli::findOne($id)) !== null) {            return $model;        }        throw new NotFoundHttpException(Yii::t('app', 'The requested page does not exist.'));    }}