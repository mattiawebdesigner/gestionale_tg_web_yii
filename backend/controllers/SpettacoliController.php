<?php/** * Controller per la gestione degli spettacoli teatrali della compagnia. *  * Questa sezione Ã¨ utile per gestire le prenotazioni con piantina degli  * spettacoli. *  * @author Mattia Leonardo Angelillo * @date 2024-09-14 */namespace backend\controllers;use Yii;use yii\filters\VerbFilter;use yii\filters\AccessControl;use yii\web\Controller;use yii\web\UploadedFile;use backend\models\Spettacoli;use backend\models\SpettacoliSearch;use backend\models\IltTeatroPiantina;use backend\components\sistema_prenotazione_biglietti\Postazioni;use yii\web\NotFoundHttpException;/** * Site controller */class SpettacoliController extends Controller{    /**     * {@inheritdoc}     */    public function behaviors()    {        return [            'access' => [                'class' => AccessControl::className(),                'rules' => [                    [                        'actions' => ['login', 'error','login-by-app', 'reset-password', 'nuova-password'],                        'allow' => true,                    ],                    [                        'actions' => ['logout', 'index'],                        'allow' => true,                        'roles' => ['@'],                    ],                    [                        'actions' => [],//All page                        'allow' => true,                        'roles' => ['Super User', 'spettacoli'],                    ],                ],            ],            'verbs' => [                'class' => VerbFilter::className(),                'actions' => [                    'logout' => ['post'],                ],            ],        ];    }        /**     * {@inheritdoc}     */    public function actions()    {        return [            'error' => [                'class' => 'yii\web\ErrorAction',            ],        ];    }    /**     * Displays homepage.     *     * @return string     */    public function actionIndex()    {        $searchModel = new SpettacoliSearch();        $dataProvider = $searchModel->search($this->request->queryParams);                return $this->render("index", [            'searchModel'  => $searchModel,            'dataProvider' => $dataProvider,        ]);    }        /**     * Permette l'inserimento di un nuovo spettacolo     *      * @return mixed     */    public function actionCreate(){        $model = new Spettacoli();        $piantine = IltTeatroPiantina::find()->all();                if(Yii::$app->request->isPost){                        if($model->load(Yii::$app->request->post())){                $model->piantina = \backend\models\IltTeatroPiantina::findOne($model->piantina)->piantina;                $banner = UploadedFile::getInstance($model, 'banner');                if($banner <> ""){                    $filename = md5($banner->baseName).md5(date('YmdHmi')). '.' . $banner->extension;                                        //$banner->saveAs("iloveteatro/pdf_uploads/".$filename);                    $model->banner = Yii::$app->params['site_protocol'].Yii::$app->params['backendWeb']                                            .DIRECTORY_SEPARATOR.Yii::$app->params['crm_upload_path']. $filename;                    $banner->saveAs(Yii::$app->params['crm_upload_path'].$filename);                }                                $locandina = UploadedFile::getInstance($model, 'locandina');                                if($locandina <> ""){                    $filename = md5($banner->baseName).md5(date('YmdHmi')). '.' . $banner->extension;                    $model->locandina = Yii::$app->params['site_protocol'].Yii::$app->params['backendWeb']                                            .Yii::$app->params['crm_upload_path']. $filename;                    $locandina->saveAs(Yii::$app->params['crm_upload_path'].$filename);                }                                if($model->save()){                    return $this->redirect(['view-show', 'id' => $model->id]);                }            }        }                return $this->render('create', [            'model'     => $model,            'piantine'  => $piantine,        ]);    }        /**     *      * @param type $id     * @return typeVisualizza i dettagli dello spettacolo e ne consente      * la modifica     *      * @param $id ID dello spettacolo     */    public function actionViewShow($id){        $model = $this->findModelSpettacolo($id);        $oldLocandina = $model->locandina;        $oldBanner = $model->banner;        if(Yii::$app->request->isPost){            if($model->load(Yii::$app->request->post())){                $model->banner = $oldBanner;                $model->locandina = $oldLocandina;                $banner = UploadedFile::getInstance($model, 'banner');                if($banner <> ""){                    $filename = md5($banner->baseName).md5(date('YmdHmi')). '.' . $banner->extension;                    //$banner->saveAs("iloveteatro/pdf_uploads/".$filename);                    $model->banner = Yii::$app->params['site_protocol'].Yii::$app->params['backendWeb']                                            .DIRECTORY_SEPARATOR.Yii::$app->params['crm_upload_path']. $filename;                    $banner->saveAs(Yii::$app->params['crm_upload_path'].$filename);                }else{                }                                $locandina = UploadedFile::getInstance($model, 'locandina');                if($locandina <> ""){                    $filename = md5($locandina->baseName).md5(date('YmdHmi')). '.' . $locandina->extension;                    $model->locandina = Yii::$app->params['site_protocol'].Yii::$app->params['backendWeb']                                            .Yii::$app->params['crm_upload_path']. $filename;                    $locandina->saveAs(Yii::$app->params['crm_upload_path'].$filename);                }                if($model->save()){                    return $this->redirect(['view-show', 'id' => $id]);                }            }        }        return $this->render('show', [            'model' => $model,        ]);    }        /**     * Cancella uno spettacolo     *      * @param int $id ID dello spettacolo da eliminare     * @return type     */    public function actionDelete($id){        $model = $this->findModelSpettacolo($id);                //Cancello le immagini dal server        $img = substr($model->banner, strpos($model->banner, Yii::$app->params['crm_upload_path']));        if(file_exists($img)){            unlink(substr($model->banner, strpos($model->banner, Yii::$app->params['crm_upload_path'])));        }        $img = substr($model->locandina, strpos($model->locandina, Yii::$app->params['crm_upload_path']));        if(file_exists($img)){            unlink($img);        }        //Cancello lo spettacolo        $model->delete();                Yii::$app->session->setFlash('success', Yii::t('app', 'Spettacolo rimosso con successo dalla programmazione'));        return $this->redirect(['/spettacoli/index']);            }        /**     * Effettua una nuova prenotazione per lo spettacolo     *      * @param type $spettacolo_id     */    public function actionPrenotazioneTicket($spettacolo_id){        $model = $this->findModelSpettacolo($spettacolo_id);        $postazioni = new Postazioni(json_decode($model->piantina));                if(Yii::$app->request->isPost){                    }                /*echo "<pre>";        print_r($model);        echo "</pre>";*/                return $this->render('nuova-prenotazione', [            'model'         => $model,            'postazioni'    => $postazioni,        ]);    }        /**     * Finds the Media model based on its primary key value.     * If the model is not found, a 404 HTTP exception will be thrown.     * @param int $id ID     * @return Media the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findModelSpettacolo($id)    {        if (($model = Spettacoli::findOne($id)) !== null) {            return $model;        }        throw new NotFoundHttpException(Yii::t('app', 'The requested page does not exist.'));    }}