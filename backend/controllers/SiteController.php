<?phpnamespace backend\controllers;use common\models\LoginForm;use Yii;use yii\filters\VerbFilter;use yii\filters\AccessControl;use yii\web\Controller;use yii\web\Response;use backend\models\Utenti;/** * Site controller */class SiteController extends Controller{    /**     * {@inheritdoc}     */    public function behaviors()    {        return [            'access' => [                'class' => AccessControl::className(),                'rules' => [                    [                        'actions' => ['login', 'error','login-by-app', 'reset-password', 'nuova-password'],                        'allow' => true,                    ],                    [                        'actions' => ['logout', 'index'],                        'allow' => true,                        'roles' => ['@'],                    ],                ],            ],            'verbs' => [                'class' => VerbFilter::className(),                'actions' => [                    'logout' => ['post'],                ],            ],        ];    }        /**     * {@inheritdoc}     */    public function actions()    {        return [            'error' => [                'class' => 'yii\web\ErrorAction',            ],        ];    }    /**     * Displays homepage.     *     * @return string     */    public function actionIndex()    {        return $this->render("index");    }        /**     * Effettua il login nell'app     *      * @param type $email     * @param type $password     * @return type     */    public function actionLoginByApp($email, $password){        \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;        $model = new LoginForm();        $model->username = $email;        $model->password = $password;                $utente = \backend\models\Utenti::find()->where(['email' => $model->username])->all();        if ($model->login()) {            //return json_encode(true);            return [                ["login" => "true",],                $model,                $utente,            ];        }        return json_encode(false);    }        /**     * Login action.     *     * @return string|Response     */    public function actionLogin()    {        if (!Yii::$app->user->isGuest) {            return $this->goHome();        }        $this->layout = 'blank';        $model = new LoginForm();        if ($model->load(Yii::$app->request->post()) && $model->login()) {            return $this->goBack();        }        $model->password = '';        return $this->render('login', [            'model' => $model,        ]);    }    /**     * Logout action.     *     * @return Response     */    public function actionLogout()    {        Yii::$app->user->logout();        return $this->goHome();    }        /**     * Metodo per inviare email di conferma     * ripristino password     *      * @param type $id ID dell'utente     * @param string $email      *               Email alla quale inviare il link di reset.     *               Se l'email non è settata      */    public function actionResetPassword($id, $email=""){        if(empty($email) || is_null($email)){            Yii::$app->session->setFlash('error', Yii::t('app', 'Questo link non è valido!'));                         return $this->render('password/reset_password_error');        }                $utente = Utenti::findOne($id);        $utente->reset_auth_key = time()."_".$id;        $utente->repeat_password = $utente->password;        $utente->save();                $linkResetPassword = Yii::$app->params['site_protocol'].Yii::$app->params['backendWeb'].                                "?r=site/nuova-password&auth={$utente->reset_auth_key}";                                        //Invio email con il link per il reset della password        $resultEmail = Yii::$app->mailer->compose(                ['html' =>'layouts/html'],                 ['content' => <<<TESTO<h2>Ripristino della password</h2>                    Ciao, {$utente->nome} {$utente->cognome}. <br />Clicca sul seguente link per ripristinare la tua password: {$linkResetPassword}. <br />Se il link non può essere cliccato copialo e incolla nel browser.TESTO                ])                ->setFrom([trim(Yii::$app->params['senderEmail']) => trim(Yii::$app->params['senderName'])])                ->setTo([trim(Yii::$app->params['supportEmail']), trim($email)])                ->setSubject(Yii::t('app', 'Ripristino della password').' | '. Yii::t('app', 'Gestionale Teatralmente Gioia'))                ->send();                if($resultEmail) {            echo "OK";        }else{            echo "NO";        }    }        /**     * Pagina di reset della password.     * Si può accedere SOLO con un link valido e non scaduto.     *      * @param string $auth     * @return mixed     */    public function actionNuovaPassword($auth=""){        //Salvo la password        if ($this->request->isPost) {                        $utente = Utenti::findOne($this->request->post('ResetPassword')['id']);            $utente->password = md5($this->request->post('ResetPassword')['password']);            $utente->repeat_password = $utente->password;            $utente->reset_auth_key = "";                        if($utente->save()){                return $this->redirect(['login']);            }        }                if(empty($auth) || is_null($auth)){            Yii::$app->session->setFlash('error', Yii::t('app', 'Il link per il reset della password non è valido!'));                     return $this->render('password/reset_password_error');        }                //Controllo la validità dell'auth key per il reset della password        echo $timestamp = explode("_", $auth)[0];                $ora = new \DateTime();        $timestamp = new \DateTime(date("Y-m-d H:i:s", $timestamp));                //sono trascorsi 10 minuti        if($ora->diff($timestamp)->i>10){            Yii::$app->session->setFlash('error', Yii::t('app', 'Il link per il reset della password è scaduto!'));                     return $this->render('password/reset_password_error');        }                $utente_id = explode("_", $auth)[1];                echo "<hr />";        $utente = Utenti::findOne(['reset_auth_key' => $auth, 'id' => $utente_id]);                //Tokeno non valido        if(is_null($utente)){            Yii::$app->session->setFlash('error', Yii::t('app', 'Il link per il reset della password non è valido!'));                     return $this->render('password/reset_password_error');        }                        return $this->render('password/nuova_password', [            'model' => new \backend\models\ResetPassword(),            'id'    => $utente_id,        ]);    }}