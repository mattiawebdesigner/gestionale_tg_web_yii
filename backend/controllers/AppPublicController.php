<?php/** * Manage Teatralmente Gioia's public app */namespace backend\controllers;use Yii;use yii\web\Controller;use yii\filters\VerbFilter;use yii\web\Response;use yii\web\JsonResponseFormatter;use backend\models\Attivita;/** * AllegatiController implements the CRUD actions for Allegati model. */class AppPublicController extends Controller{    /**     * @inheritDoc     */    public function behaviors()    {        return array_merge(            parent::behaviors(),            [                'verbs' => [                    'class' => VerbFilter::className(),                    'actions' => [                        'delete' => ['POST'],                    ],                ],            ]        );    }        /**     * Retrivies ALL activities     *      * @return array     */    public function actionAttivita(){        Yii::$app->response->format = Response::FORMAT_JSON;        Yii::$app->response->formatters = [            Response::FORMAT_JSON => [                'class' => JsonResponseFormatter::class,                'prettyPrint' => true            ]        ];                $next = $this->findNext();        $old = $this->findOld();        return [            [                'next' => $next,                'old'  => $old,            ]        ];    }        public function actionAttivitaInfo($id){        Yii::$app->response->format = Response::FORMAT_JSON;        Yii::$app->response->formatters = [            Response::FORMAT_JSON => [                'class' => JsonResponseFormatter::class,                'prettyPrint' => true            ]        ];                $model = $this->findModel($id);                return $model;    }        /**     * Finds the Attivita model based on its primary key value.     * If the model is not found, a 404 HTTP exception will be thrown.     * @param string $id ID     * @return Attivita the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findModel($id)    {        if (($model = Attivita::findOne($id)) !== null) {            return $model;        }                throw new NotFoundHttpException(Yii::t('app', 'The requested page does not exist.'));    }        /**     * Finds the Attivita model (Next activities).     * If the model is not found, a 404 HTTP exception will be thrown.     * @return Attivita the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findNext()    {        if (($model = Attivita::find()->where([            '>=',            'data_attivita',            date('Y-m-d H:i')        ])->orderBy(['data_attivita' => SORT_DESC])->all()) !== null) {            return $model;        }                throw new NotFoundHttpException(Yii::t('app', 'The requested page does not exist.'));    }        /**     * Finds the Attivita model (Old activities).     * If the model is not found, a 404 HTTP exception will be thrown.     * @return Attivita the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findOld()    {        if (($model = Attivita::find()->where([            '<=',            'data_attivita',            date('Y-m-d H:i')        ])->orderBy(['data_attivita' => SORT_DESC])->all()) !== null) {            return $model;        }                throw new NotFoundHttpException(Yii::t('app', 'The requested page does not exist.'));    }}